[{"/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/index.js":"1","/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/App.js":"2","/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/contexts/user.js":"3","/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/contexts/darkmode.js":"4","/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/pages/LoginPage/index.js":"5","/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/pages/index.js":"6","/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/components/index.js":"7","/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/pages/home/index.js":"8","/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/components/comment/index.js":"9","/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/components/signIn-btn/index.js":"10","/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/components/comment-input/index.js":"11","/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/containers/index.js":"12","/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/containers/feed/index.js":"13","/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/firebase.js":"14","/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/services/auth.js":"15","/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/containers/navbar/index.js":"16","/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/containers/post/index.js":"17","/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/containers/create-post/index.js":"18","/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/helper/functions.js":"19","/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/components/darkmode-btn/index.js":"20"},{"size":994,"mtime":1623925372811,"results":"21","hashOfConfig":"22"},{"size":172,"mtime":1621077266823,"results":"23","hashOfConfig":"22"},{"size":513,"mtime":1621111808270,"results":"24","hashOfConfig":"22"},{"size":550,"mtime":1621112530441,"results":"25","hashOfConfig":"22"},{"size":1652,"mtime":1621161886979,"results":"26","hashOfConfig":"22"},{"size":42,"mtime":1612063724000,"results":"27","hashOfConfig":"22"},{"size":160,"mtime":1612760236000,"results":"28","hashOfConfig":"22"},{"size":790,"mtime":1621160509431,"results":"29","hashOfConfig":"22"},{"size":286,"mtime":1623851909439,"results":"30","hashOfConfig":"22"},{"size":488,"mtime":1623851893858,"results":"31","hashOfConfig":"22"},{"size":1687,"mtime":1621114905310,"results":"32","hashOfConfig":"22"},{"size":144,"mtime":1612743672000,"results":"33","hashOfConfig":"22"},{"size":1029,"mtime":1623329993267,"results":"34","hashOfConfig":"22"},{"size":620,"mtime":1612650138000,"results":"35","hashOfConfig":"22"},{"size":554,"mtime":1623852000632,"results":"36","hashOfConfig":"22"},{"size":1343,"mtime":1621162636230,"results":"37","hashOfConfig":"22"},{"size":2724,"mtime":1621114540589,"results":"38","hashOfConfig":"22"},{"size":4254,"mtime":1621158753409,"results":"39","hashOfConfig":"22"},{"size":332,"mtime":1612729990000,"results":"40","hashOfConfig":"22"},{"size":821,"mtime":1623329889816,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"r63ejy",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},"/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/index.js",[],["91","92"],"/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/App.js",[],"/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/contexts/user.js",[],"/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/contexts/darkmode.js",[],"/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/pages/LoginPage/index.js",["93","94"],"import React, { useContext } from \"react\";\nimport { SignInBtn } from \"../../components\";\nimport { UserContext } from \"../../contexts/user\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./style.css\";\nimport { Card } from \"react-bootstrap\";\nimport appicon from \"../../res/appicon.svg\";\nimport appicon2 from \"../../res/appicon2.svg\";\n\nexport function LoginPage() {\n  const [user, setUser] = useContext(UserContext).user;\n  const history = useHistory();\n  if (user) {\n    history.push(\"./home\");\n  }\n\n  return (\n    <div className=\"loginpage\">\n      <div className=\"loginpage-header\">\n        <div className=\"loginpage-heading\">\n          <img\n            style={{\n              height: \"40px\",\n              width: \"40px\",\n              borderRadius: \"12px\",\n              marginRight: \"20px\",\n            }}\n            src={appicon}\n          ></img>\n          Say it Social\n        </div>\n      </div>\n      <div className=\"loginpage-inner\">\n        <div className=\"loginpage-title\">\n          <div className=\"loginpage-icon\">\n            <Card.Img\n              style={{ width: \"200px\", marginTop: \"40px\" }}\n              src={appicon2}\n            ></Card.Img>\n          </div>{\" \"}\n          Say it Social\n        </div>\n        <Card className=\"loginpage-card\">\n          <Card.Body>\n            <Card.Text className=\"loginpage-card-text\">\n              Sign in with Google:\n            </Card.Text>\n            <div className=\"loginpage-signinbtn\">\n              <SignInBtn />\n            </div>\n          </Card.Body>\n        </Card>\n      </div>\n      <div className=\"loginpage-footer\">Developed by Sagar Dalal</div>\n    </div>\n  );\n}\n","/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/pages/index.js",[],"/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/components/index.js",[],"/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/pages/home/index.js",["95"],"import React, { useContext } from \"react\";\nimport \"./style.css\";\nimport { CreatePost, Navbar } from \"../../containers\";\nimport Feed from \"../../containers/feed\";\nimport { DarkModeContext } from \"../../contexts/darkmode\";\n\nexport default function Home() {\n  const [DarkMode, setDarkMode] = useContext(DarkModeContext).DarkMode;\n  var homeCss = \"home\";\n  if (DarkMode) {\n    homeCss = \"home dark\";\n  }\n  return (\n    <div className={homeCss}>\n      <Navbar />\n      <CreatePost />\n      <Feed />\n      <div\n        style={{\n          backgroundColor: \"#333333\",\n          color: \"white\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"40px\",\n        }}\n      >\n        Developed by Sagar Dalal\n      </div>\n    </div>\n  );\n}\n","/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/components/comment/index.js",[],"/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/components/signIn-btn/index.js",[],"/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/components/comment-input/index.js",["96","97","98","99"],"import React, { useContext, useState } from \"react\";\nimport \"./style.css\";\nimport { UserContext } from \"../../contexts/user\";\nimport { db } from \"../../firebase\";\nimport { DarkModeContext } from \"../../contexts/darkmode\";\n\nexport default function CommentInput({ comments, id }) {\n  const [comment, setComment] = useState(\"\");\n\n  const [user, setUser] = useContext(UserContext).user;\n  const [commentArray, setCommentArray] = useState(comments ? comments : []);\n\n  const [DarkMode, setDarkMode] = useContext(DarkModeContext).DarkMode;\n  var commentInput__btnCss = \"commentInput__btn\";\n  var commentInput__textarea = \"commentInput__textarea\";\n  if (DarkMode) {\n    commentInput__textarea = \"commentInput__textarea dark\";\n    commentInput__btnCss = \"commentInput__btn dark\";\n  }\n\n  const addComment = () => {\n    if (comment != \"\") {\n      //add comment to the post info\n      commentArray.push({\n        comment: comment,\n        username: user.email.replace(\"@gmail.com\", \"\").toLowerCase(),\n      });\n\n      db.collection(\"posts\")\n        .doc(id)\n        .update({\n          comments: commentArray,\n        })\n        .then(function () {\n          setComment(\"\");\n          console.log(\"comment added\");\n        })\n        .catch(function (error) {\n          console.log(`Error ${error}`);\n        });\n    }\n  };\n  return (\n    <div className=\"commentInput\">\n      <textarea\n        className={commentInput__textarea}\n        rows=\"1\"\n        placeholder=\"write a comment..\"\n        value={comment}\n        onChange={(e) => setComment(e.target.value)}\n      ></textarea>\n      <button onClick={addComment} className={commentInput__btnCss}>\n        Post\n      </button>\n    </div>\n  );\n}\n","/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/containers/index.js",[],"/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/containers/feed/index.js",["100"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Post } from \"..\";\nimport { DarkModeContext } from \"../../contexts/darkmode\";\nimport { db } from \"../../firebase\";\nimport \"./style.css\";\n\nexport default function Feed() {\n  const [posts, setPosts] = useState([]);\n  const [DarkMode, setDarkMode] = useContext(DarkModeContext).DarkMode;\n  var feedCss = \"feed\";\n  if (DarkMode) {\n    feedCss = \"feed dark\";\n  }\n\n  useEffect(() => {\n    db.collection(\"posts\").onSnapshot((snapshot) => {\n      console.log(snapshot.docs);\n      setPosts(snapshot.docs.map((doc) => ({ id: doc.id, post: doc.data() })));\n    });\n  }, []);\n\n  return (\n    <div className={feedCss}>\n      {posts.map(({ id, post }) => {\n        return (\n          <Post\n            key={id}\n            id={id}\n            profileUrl={post.profileUrl}\n            username={post.username}\n            photoUrl={post.photoUrl}\n            caption={post.caption}\n            comments={post.comments}\n          />\n        );\n      })}\n    </div>\n  );\n}\n","/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/firebase.js",[],"/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/services/auth.js",[],"/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/containers/navbar/index.js",["101","102","103","104","105"],"import React, { useContext } from \"react\";\nimport { SignInBtn } from \"../../components\";\nimport { UserContext } from \"../../contexts/user\";\nimport \"./style.css\";\nimport { logout } from \"../../services/auth\";\nimport { useHistory } from \"react-router-dom\";\nimport DarkModeBtn from \"../../components/darkmode-btn\";\nimport { DarkModeContext } from \"../../contexts/darkmode\";\nimport appicon from \"../../res/appicon2.svg\";\n\nexport default function Navbar() {\n  const [user, setUser] = useContext(UserContext).user;\n  const [DarkMode, setDarkMode] = useContext(DarkModeContext).DarkMode;\n  const history = useHistory();\n  const logMeOut = async () => {\n    let logMeOut = await logout();\n  };\n  if (!user) {\n    history.push(\"./\");\n  }\n  var navbarCss = \"navbar\";\n  if (DarkMode) {\n    navbarCss = \"navbar dark\";\n  }\n\n  return (\n    <div className={navbarCss}>\n      <div className=\"heading\">\n        <img\n          style={{ height: \"40px\", marginRight: \"10px\" }}\n          src={appicon}\n        ></img>\n        Say it Social\n        <div className=\"navbar-darkmode\">\n          <DarkModeBtn />\n        </div>\n      </div>\n\n      {user ? (\n        <div onClick={logMeOut} className=\"logged-in\">\n          <img className=\"navbar__img\" src={user.photoURL} />\n          Log out\n        </div>\n      ) : (\n        <SignInBtn />\n      )}\n    </div>\n  );\n}\n","/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/containers/post/index.js",["106","107","108","109","110"],"import React, { useContext, useState } from \"react\";\nimport { Comment } from \"../../components\";\nimport { db, storage } from \"../../firebase\";\nimport \"./style.css\";\nimport { CommentInput } from \"../../components\";\nimport { UserContext } from \"../../contexts/user\";\nimport { DarkModeContext } from \"../../contexts/darkmode\";\n\nexport default function Post({\n  profileUrl,\n  username,\n  id,\n  photoUrl,\n  caption,\n  comments,\n}) {\n  const [user, setUser] = useContext(UserContext).user;\n\n  const [DarkMode, setDarkMode] = useContext(DarkModeContext).DarkMode;\n  var postCss = \"post\";\n  var post__delete = \"post__delete\";\n  if (DarkMode) {\n    postCss = \"post dark\";\n    post__delete = \"post__delete dark\";\n  }\n\n  var displayDelete = false;\n  var currentUser = null;\n  const postUserChecker = () => {\n    if (user) {\n      currentUser = user.email.replace(\"@gmail.com\", \"\");\n    }\n    if (currentUser === username && currentUser !== null) {\n      displayDelete = true;\n    }\n  };\n  postUserChecker();\n\n  const deletePost = () => {\n    //delete the image from firebase storage\n\n    //get reference to the image file we like to delete\n    var imageRef = storage.refFromURL(photoUrl);\n\n    //delete the file\n    imageRef\n      .delete()\n      .then(function () {\n        console.log(\"delete successfull\");\n      })\n      .catch(function (error) {\n        console.log(`Error delete${error}`);\n      });\n\n    //2 delete the post info from firbase firestore\n    db.collection(\"posts\")\n      .doc(id)\n      .delete()\n      .then(function () {\n        console.log(\"delete successfull from firebase\");\n      })\n      .catch(function (error) {\n        console.log(`Error post info delete from firebase ${error}`);\n      });\n  };\n\n  return (\n    <div className={postCss}>\n      <div className=\"post__header\">\n        <div className=\"post__headerLeft\">\n          <img className=\"post__profilePic\" src={profileUrl} />\n          <p style={{ marginLeft: \"8px\" }}>{username}</p>\n        </div>\n        {displayDelete ? (\n          <button onClick={deletePost} className={post__delete}>\n            Delete\n          </button>\n        ) : (\n          <></>\n        )}\n      </div>\n\n      <div className=\"post__center\">\n        <img className=\"post__photoUrl\" src={photoUrl}></img>\n      </div>\n\n      <div>\n        <p>\n          <span style={{ fontWeight: \"600\", marginRight: \"4px\" }}>\n            {username}\n          </span>\n          {caption}\n        </p>\n      </div>\n\n      {comments ? (\n        comments.map((comment) => (\n          <Comment username={comment.username} caption={comment.comment} />\n        ))\n      ) : (\n        <div></div>\n      )}\n      {user ? <CommentInput comments={comments} id={id} /> : <div />}\n    </div>\n  );\n}\n","/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/containers/create-post/index.js",["111","112","113","114"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { SignInBtn } from \"../../components\";\nimport { UserContext } from \"../../contexts/user\";\nimport \"./style.css\";\n\nimport AddAPhotoIcon from \"@material-ui/icons/AddAPhoto\";\nimport makeId from \"../../helper/functions\";\nimport { db, storage } from \"../../firebase\";\n\nimport firebase from \"firebase\";\nimport { DarkModeContext } from \"../../contexts/darkmode\";\n\nexport default function CreatePost() {\n  const [user, setUser] = useContext(UserContext).user;\n  const [caption, setCaption] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [DarkMode, setDarkMode] = useContext(DarkModeContext).DarkMode;\n  var createPost__loggedInCss = \"createPost__loggedIn\";\n  var createPost__textarea = \"createPost__textarea\";\n  if (DarkMode) {\n    createPost__textarea = \"createPost__textarea dark\";\n    createPost__loggedInCss = \"createPost__loggedIn dark\";\n  }\n\n  firebase.auth().onAuthStateChanged(function (user) {\n    setUser(user);\n  });\n\n  const handleChange = (e) => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n\n      var selectedImageSrc = URL.createObjectURL(e.target.files[0]);\n\n      var imagePreview = document.getElementById(\"image-preview\");\n\n      imagePreview.src = selectedImageSrc;\n      imagePreview.style.display = \"block\";\n    }\n  };\n\n  const handleUpload = () => {\n    if (image) {\n      var imageName = makeId(10);\n      const uploadTask = storage.ref(`images/${imageName}.jpg`).put(image);\n      uploadTask.on(\n        \"state_changed\",\n        (snapshot) => {\n          //progress function\n\n          const progress = Math.round(\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n          );\n          setProgress(progress);\n        },\n        (error) => {\n          console.log(error);\n        },\n        () => {\n          //get download url and upload the post info\n          storage\n            .ref(\"images\")\n            .child(`${imageName}.jpg`)\n            .getDownloadURL()\n            .then((imageUrl) => {\n              db.collection(\"posts\").add({\n                timestamp: firebase.firestore.Timestamp.now(),\n                caption: caption,\n                photoUrl: imageUrl,\n                username: user.email.replace(\"@gmail.com\", \"\"),\n                profileUrl: user.photoURL,\n              });\n            });\n          setCaption(\"\");\n          setProgress(0);\n          setImage(null);\n          document.getElementById(\"image-preview\").style.display = \"none\";\n          console.log(\"image nulled\");\n        }\n      );\n    }\n  };\n\n  return (\n    <div className=\"createPost\">\n      {user ? (\n        <div className={createPost__loggedInCss}>\n          <p>Create Post</p>\n          <div className=\"createPost__loggedInCenter\">\n            <textarea\n              placeholder=\"enter caption here..\"\n              className={createPost__textarea}\n              rows=\"3\"\n              value={caption}\n              onChange={(e) => setCaption(e.target.value)}\n            ></textarea>\n            <div className=\"createPost__imagePreview\">\n              <img id=\"image-preview\" alt=\"\" />\n            </div>\n          </div>\n          <div className=\"creatPost__loggedInBottom\">\n            <div className=\"createPost__imageUpload\">\n              <label htmlFor=\"fileInput\">\n                <AddAPhotoIcon\n                  style={{ cursor: \"pointer\", fontSize: \"20px\" }}\n                />\n              </label>\n\n              <input\n                id=\"fileInput\"\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={handleChange}\n              ></input>\n            </div>\n            <button\n              className=\"createPost__uploadBtn\"\n              onClick={handleUpload}\n              style={{\n                color: DarkMode\n                  ? caption\n                    ? \"#FFFFFF\"\n                    : \"lightgrey\"\n                  : caption\n                  ? \"#000\"\n                  : \"lightgrey\",\n              }}\n            >\n              {`Upload ${progress != 0 ? progress : \"\"}`}\n            </button>\n          </div>\n        </div>\n      ) : (\n        <div></div>\n      )}\n    </div>\n  );\n}\n","/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/helper/functions.js",[],"/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/components/darkmode-btn/index.js",["115","116"],"import React, { useState, useContext } from \"react\";\nimport \"./style.css\";\nimport { IconButton } from \"@material-ui/core\";\nimport darkmodeicon from \"../../res/sun.svg\";\nimport darkmodeOnIcon from \"../../res/moon.svg\";\nimport { DarkModeContext } from \"../../contexts/darkmode\";\n\nexport default function DarkModeBtn() {\n  const [DarkMode, setDarkMode] = useContext(DarkModeContext).DarkMode;\n  var darkmodeImg = \"darkmodebtn-image\";\n  const darkmodeHandler = () => {\n    darkmodeImg = \"darkmodebtn-image dark\";\n\n    setDarkMode(!DarkMode);\n  };\n  return (\n    <div className=\"darkmode-btn\">\n      <IconButton onClick={darkmodeHandler} className=\"darkmodebtn-icon\">\n        <img\n          className={darkmodeImg}\n          src={DarkMode ? darkmodeOnIcon : darkmodeicon}\n        ></img>\n      </IconButton>\n    </div>\n  );\n}\n",{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":11,"column":16,"nodeType":"123","messageId":"124","endLine":11,"endColumn":23},{"ruleId":"125","severity":1,"message":"126","line":21,"column":11,"nodeType":"127","endLine":29,"endColumn":12},{"ruleId":"121","severity":1,"message":"128","line":8,"column":20,"nodeType":"123","messageId":"124","endLine":8,"endColumn":31},{"ruleId":"121","severity":1,"message":"122","line":10,"column":16,"nodeType":"123","messageId":"124","endLine":10,"endColumn":23},{"ruleId":"121","severity":1,"message":"129","line":11,"column":24,"nodeType":"123","messageId":"124","endLine":11,"endColumn":39},{"ruleId":"121","severity":1,"message":"128","line":13,"column":20,"nodeType":"123","messageId":"124","endLine":13,"endColumn":31},{"ruleId":"130","severity":1,"message":"131","line":22,"column":17,"nodeType":"132","messageId":"133","endLine":22,"endColumn":19},{"ruleId":"121","severity":1,"message":"128","line":9,"column":20,"nodeType":"123","messageId":"124","endLine":9,"endColumn":31},{"ruleId":"121","severity":1,"message":"122","line":12,"column":16,"nodeType":"123","messageId":"124","endLine":12,"endColumn":23},{"ruleId":"121","severity":1,"message":"128","line":13,"column":20,"nodeType":"123","messageId":"124","endLine":13,"endColumn":31},{"ruleId":"121","severity":1,"message":"134","line":16,"column":9,"nodeType":"123","messageId":"124","endLine":16,"endColumn":17},{"ruleId":"125","severity":1,"message":"126","line":29,"column":9,"nodeType":"127","endLine":32,"endColumn":10},{"ruleId":"125","severity":1,"message":"126","line":41,"column":11,"nodeType":"127","endLine":41,"endColumn":62},{"ruleId":"121","severity":1,"message":"135","line":1,"column":29,"nodeType":"123","messageId":"124","endLine":1,"endColumn":37},{"ruleId":"121","severity":1,"message":"122","line":17,"column":16,"nodeType":"123","messageId":"124","endLine":17,"endColumn":23},{"ruleId":"121","severity":1,"message":"128","line":19,"column":20,"nodeType":"123","messageId":"124","endLine":19,"endColumn":31},{"ruleId":"125","severity":1,"message":"126","line":71,"column":11,"nodeType":"127","endLine":71,"endColumn":64},{"ruleId":"125","severity":1,"message":"126","line":84,"column":9,"nodeType":"127","endLine":84,"endColumn":56},{"ruleId":"121","severity":1,"message":"136","line":1,"column":29,"nodeType":"123","messageId":"124","endLine":1,"endColumn":38},{"ruleId":"121","severity":1,"message":"137","line":2,"column":10,"nodeType":"123","messageId":"124","endLine":2,"endColumn":19},{"ruleId":"121","severity":1,"message":"128","line":18,"column":20,"nodeType":"123","messageId":"124","endLine":18,"endColumn":31},{"ruleId":"130","severity":1,"message":"131","line":130,"column":35,"nodeType":"132","messageId":"133","endLine":130,"endColumn":37},{"ruleId":"121","severity":1,"message":"135","line":1,"column":17,"nodeType":"123","messageId":"124","endLine":1,"endColumn":25},{"ruleId":"125","severity":1,"message":"126","line":19,"column":9,"nodeType":"127","endLine":22,"endColumn":10},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"no-unused-vars","'setUser' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setDarkMode' is assigned a value but never used.","'setCommentArray' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'logMeOut' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'SignInBtn' is defined but never used.","no-global-assign","no-unsafe-negation"]