{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/contexts/darkmode.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nexport const DarkModeContext = /*#__PURE__*/createContext();\nexport const DarkModeContextProvider = props => {\n  _s();\n\n  //By using this context this user state value can be accessed from anywhere.\n  const [DarkMode, setDarkMode] = useState(false);\n  return /*#__PURE__*/_jsxDEV(DarkModeContext.Provider, {\n    value: {\n      DarkMode: [DarkMode, setDarkMode]\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}; //to use this user state value in other components,just wrap under <UserContext.Provider> this </UserContext.Provider>\n\n_s(DarkModeContextProvider, \"LnS0GlUMz1QrVGnOjflnNvKGvuM=\");\n\n_c = DarkModeContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"DarkModeContextProvider\");","map":{"version":3,"sources":["/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/contexts/darkmode.js"],"names":["createContext","useState","DarkModeContext","DarkModeContextProvider","props","DarkMode","setDarkMode","children"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;AAEA,OAAO,MAAMC,eAAe,gBAAGF,aAAa,EAArC;AACP,OAAO,MAAMG,uBAAuB,GAAIC,KAAD,IAAW;AAAA;;AAChD;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;AACA,sBACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAEI,MAAAA,QAAQ,EAAE,CAACA,QAAD,EAAWC,WAAX;AAAZ,KAAjC;AAAA,cACGF,KAAK,CAACG;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CARM,C,CASP;;GATaJ,uB;;KAAAA,uB","sourcesContent":["import { createContext, useState } from \"react\";\n\nexport const DarkModeContext = createContext();\nexport const DarkModeContextProvider = (props) => {\n  //By using this context this user state value can be accessed from anywhere.\n  const [DarkMode, setDarkMode] = useState(false);\n  return (\n    <DarkModeContext.Provider value={{ DarkMode: [DarkMode, setDarkMode] }}>\n      {props.children}\n    </DarkModeContext.Provider>\n  );\n};\n//to use this user state value in other components,just wrap under <UserContext.Provider> this </UserContext.Provider>\n"]},"metadata":{},"sourceType":"module"}