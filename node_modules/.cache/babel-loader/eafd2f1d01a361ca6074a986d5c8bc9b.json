{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{createContext,useState}from\"react\";export var DarkModeContext=/*#__PURE__*/createContext();export var DarkModeContextProvider=function DarkModeContextProvider(props){//By using this context this user state value can be accessed from anywhere.\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),DarkMode=_useState2[0],setDarkMode=_useState2[1];return/*#__PURE__*/_jsx(DarkModeContext.Provider,{value:{DarkMode:[DarkMode,setDarkMode]},children:props.children});};//to use this user state value in other components,just wrap under <UserContext.Provider> this </UserContext.Provider>","map":{"version":3,"sources":["/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/contexts/darkmode.js"],"names":["createContext","useState","DarkModeContext","DarkModeContextProvider","props","DarkMode","setDarkMode","children"],"mappings":"6NAAA,OAASA,aAAT,CAAwBC,QAAxB,KAAwC,OAAxC,CAEA,MAAO,IAAMC,CAAAA,eAAe,cAAGF,aAAa,EAArC,CACP,MAAO,IAAMG,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACC,KAAD,CAAW,CAChD;AADgD,cAEhBH,QAAQ,CAAC,KAAD,CAFQ,wCAEzCI,QAFyC,eAE/BC,WAF+B,eAGhD,mBACE,KAAC,eAAD,CAAiB,QAAjB,EAA0B,KAAK,CAAE,CAAED,QAAQ,CAAE,CAACA,QAAD,CAAWC,WAAX,CAAZ,CAAjC,UACGF,KAAK,CAACG,QADT,EADF,CAKD,CARM,CASP","sourcesContent":["import { createContext, useState } from \"react\";\n\nexport const DarkModeContext = createContext();\nexport const DarkModeContextProvider = (props) => {\n  //By using this context this user state value can be accessed from anywhere.\n  const [DarkMode, setDarkMode] = useState(false);\n  return (\n    <DarkModeContext.Provider value={{ DarkMode: [DarkMode, setDarkMode] }}>\n      {props.children}\n    </DarkModeContext.Provider>\n  );\n};\n//to use this user state value in other components,just wrap under <UserContext.Provider> this </UserContext.Provider>\n"]},"metadata":{},"sourceType":"module"}