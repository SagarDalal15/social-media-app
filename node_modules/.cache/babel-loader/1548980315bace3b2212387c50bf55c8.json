{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/contexts/user.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nexport const UserContext = /*#__PURE__*/createContext();\nexport const UserContextProvider = props => {\n  _s();\n\n  //By using this context this user state value can be accessed from anywhere.\n  const [user, setUser] = useState(null);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user: [user, setUser]\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}; //to use this user state value in other components,just wrap under <UserContext.Provider> this </UserContext.Provider>\n\n_s(UserContextProvider, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n\n_c = UserContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserContextProvider\");","map":{"version":3,"sources":["/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/contexts/user.js"],"names":["createContext","useState","UserContext","UserContextProvider","props","user","setUser","children"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;AAEA,OAAO,MAAMC,WAAW,gBAAGF,aAAa,EAAjC;AACP,OAAO,MAAMG,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC5C;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;AACA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEI,MAAAA,IAAI,EAAE,CAACA,IAAD,EAAOC,OAAP;AAAR,KAA7B;AAAA,cACGF,KAAK,CAACG;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CARM,C,CASP;;GATaJ,mB;;KAAAA,mB","sourcesContent":["import { createContext, useState } from \"react\";\n\nexport const UserContext = createContext();\nexport const UserContextProvider = (props) => {\n  //By using this context this user state value can be accessed from anywhere.\n  const [user, setUser] = useState(null);\n  return (\n    <UserContext.Provider value={{ user: [user, setUser] }}>\n      {props.children}\n    </UserContext.Provider>\n  );\n};\n//to use this user state value in other components,just wrap under <UserContext.Provider> this </UserContext.Provider>\n"]},"metadata":{},"sourceType":"module"}