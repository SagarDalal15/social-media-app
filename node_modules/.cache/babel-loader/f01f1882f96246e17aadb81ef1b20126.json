{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState}from\"react\";import\"./style.css\";import{UserContext}from\"../../contexts/user\";import{db}from\"../../firebase\";import{DarkModeContext}from\"../../contexts/darkmode\";export default function CommentInput(_ref){var comments=_ref.comments,id=_ref.id;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),comment=_useState2[0],setComment=_useState2[1];var _useContext$user=_slicedToArray(useContext(UserContext).user,2),user=_useContext$user[0],setUser=_useContext$user[1];var _useState3=useState(comments?comments:[]),_useState4=_slicedToArray(_useState3,2),commentArray=_useState4[0],setCommentArray=_useState4[1];var _useContext$DarkMode=_slicedToArray(useContext(DarkModeContext).DarkMode,2),DarkMode=_useContext$DarkMode[0],setDarkMode=_useContext$DarkMode[1];var commentInput__btnCss=\"commentInput__btn\";var commentInput__textarea=\"commentInput__textarea\";if(DarkMode){commentInput__textarea=\"commentInput__textarea dark\";commentInput__btnCss=\"commentInput__btn dark\";}var addComment=function addComment(){if(comment!=\"\"){//add comment to the post info\ncommentArray.push({comment:comment,username:user.email.replace(\"@gmail.com\",\"\").toLowerCase()});db.collection(\"posts\").doc(id).update({comments:commentArray}).then(function(){setComment(\"\");console.log(\"comment added\");}).catch(function(error){console.log(\"Error \".concat(error));});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"commentInput\",children:[/*#__PURE__*/_jsx(\"textarea\",{className:commentInput__textarea,rows:\"1\",placeholder:\"write a comment..\",value:comment,onChange:function onChange(e){return setComment(e.target.value);}}),/*#__PURE__*/_jsx(\"button\",{onClick:addComment,className:commentInput__btnCss,children:\"Post\"})]});}","map":{"version":3,"sources":["/Users/sagardalal/Desktop/Desktop/ReactJS/social-app-github/src/components/comment-input/index.js"],"names":["React","useContext","useState","UserContext","db","DarkModeContext","CommentInput","comments","id","comment","setComment","user","setUser","commentArray","setCommentArray","DarkMode","setDarkMode","commentInput__btnCss","commentInput__textarea","addComment","push","username","email","replace","toLowerCase","collection","doc","update","then","console","log","catch","error","e","target","value"],"mappings":"0QAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,KAA4C,OAA5C,CACA,MAAO,aAAP,CACA,OAASC,WAAT,KAA4B,qBAA5B,CACA,OAASC,EAAT,KAAmB,gBAAnB,CACA,OAASC,eAAT,KAAgC,yBAAhC,CAEA,cAAe,SAASC,CAAAA,YAAT,MAAwC,IAAhBC,CAAAA,QAAgB,MAAhBA,QAAgB,CAANC,EAAM,MAANA,EAAM,eACvBN,QAAQ,CAAC,EAAD,CADe,wCAC9CO,OAD8C,eACrCC,UADqC,mDAG7BT,UAAU,CAACE,WAAD,CAAV,CAAwBQ,IAHK,IAG9CA,IAH8C,qBAGxCC,OAHwC,oCAIbV,QAAQ,CAACK,QAAQ,CAAGA,QAAH,CAAc,EAAvB,CAJK,yCAI9CM,YAJ8C,eAIhCC,eAJgC,uDAMrBb,UAAU,CAACI,eAAD,CAAV,CAA4BU,QANP,IAM9CA,QAN8C,yBAMpCC,WANoC,yBAOrD,GAAIC,CAAAA,oBAAoB,CAAG,mBAA3B,CACA,GAAIC,CAAAA,sBAAsB,CAAG,wBAA7B,CACA,GAAIH,QAAJ,CAAc,CACZG,sBAAsB,CAAG,6BAAzB,CACAD,oBAAoB,CAAG,wBAAvB,CACD,CAED,GAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,GAAIV,OAAO,EAAI,EAAf,CAAmB,CACjB;AACAI,YAAY,CAACO,IAAb,CAAkB,CAChBX,OAAO,CAAEA,OADO,CAEhBY,QAAQ,CAAEV,IAAI,CAACW,KAAL,CAAWC,OAAX,CAAmB,YAAnB,CAAiC,EAAjC,EAAqCC,WAArC,EAFM,CAAlB,EAKApB,EAAE,CAACqB,UAAH,CAAc,OAAd,EACGC,GADH,CACOlB,EADP,EAEGmB,MAFH,CAEU,CACNpB,QAAQ,CAAEM,YADJ,CAFV,EAKGe,IALH,CAKQ,UAAY,CAChBlB,UAAU,CAAC,EAAD,CAAV,CACAmB,OAAO,CAACC,GAAR,CAAY,eAAZ,EACD,CARH,EASGC,KATH,CASS,SAAUC,KAAV,CAAiB,CACtBH,OAAO,CAACC,GAAR,iBAAqBE,KAArB,GACD,CAXH,EAYD,CACF,CArBD,CAsBA,mBACE,aAAK,SAAS,CAAC,cAAf,wBACE,iBACE,SAAS,CAAEd,sBADb,CAEE,IAAI,CAAC,GAFP,CAGE,WAAW,CAAC,mBAHd,CAIE,KAAK,CAAET,OAJT,CAKE,QAAQ,CAAE,kBAACwB,CAAD,QAAOvB,CAAAA,UAAU,CAACuB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB,EALZ,EADF,cAQE,eAAQ,OAAO,CAAEhB,UAAjB,CAA6B,SAAS,CAAEF,oBAAxC,kBARF,GADF,CAcD","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport \"./style.css\";\nimport { UserContext } from \"../../contexts/user\";\nimport { db } from \"../../firebase\";\nimport { DarkModeContext } from \"../../contexts/darkmode\";\n\nexport default function CommentInput({ comments, id }) {\n  const [comment, setComment] = useState(\"\");\n\n  const [user, setUser] = useContext(UserContext).user;\n  const [commentArray, setCommentArray] = useState(comments ? comments : []);\n\n  const [DarkMode, setDarkMode] = useContext(DarkModeContext).DarkMode;\n  var commentInput__btnCss = \"commentInput__btn\";\n  var commentInput__textarea = \"commentInput__textarea\";\n  if (DarkMode) {\n    commentInput__textarea = \"commentInput__textarea dark\";\n    commentInput__btnCss = \"commentInput__btn dark\";\n  }\n\n  const addComment = () => {\n    if (comment != \"\") {\n      //add comment to the post info\n      commentArray.push({\n        comment: comment,\n        username: user.email.replace(\"@gmail.com\", \"\").toLowerCase(),\n      });\n\n      db.collection(\"posts\")\n        .doc(id)\n        .update({\n          comments: commentArray,\n        })\n        .then(function () {\n          setComment(\"\");\n          console.log(\"comment added\");\n        })\n        .catch(function (error) {\n          console.log(`Error ${error}`);\n        });\n    }\n  };\n  return (\n    <div className=\"commentInput\">\n      <textarea\n        className={commentInput__textarea}\n        rows=\"1\"\n        placeholder=\"write a comment..\"\n        value={comment}\n        onChange={(e) => setComment(e.target.value)}\n      ></textarea>\n      <button onClick={addComment} className={commentInput__btnCss}>\n        Post\n      </button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}