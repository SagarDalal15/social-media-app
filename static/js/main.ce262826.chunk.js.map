{"version":3,"sources":["contexts/user.js","firebase.js","services/auth.js","components/signIn-btn/index.js","components/comment/index.js","contexts/darkmode.js","components/comment-input/index.js","res/sun.svg","res/moon.svg","components/darkmode-btn/index.js","res/appicon2.svg","res/blank-profile.webp","containers/navbar/index.js","contexts/notification-context.js","components/authForm/index.js","containers/create-post/index.js","helper/functions.js","containers/post/index.js","containers/feed/index.js","pages/home/index.js","RequireAuth.js","App.js","components/notification/notification.js","components/layout/Layout.js","index.js","pages/LoginPage/index.js","components/notification/notification.module.css"],"names":["UserContext","createContext","UserContextProvider","props","useState","user","setUser","Provider","value","children","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","storage","provider","GoogleAuthProvider","signInWithGoogle","a","signInWithPopup","then","res","catch","error","console","log","message","logout","signOut","logout_success","signUpWithEmail","email","password","createUserWithEmailAndPassword","userCredential","code","signInWithEmail","signInWithEmailAndPassword","SignInBtn","useContext","history","useHistory","signInBtnClick","userBySignIn","localStorage","setItem","push","onClick","className","Comment","username","caption","style","fontWeight","marginRight","DarkModeContext","DarkModeContextProvider","DarkMode","setDarkMode","CommentInput","comments","id","comment","setComment","commentArray","commentInput__btnCss","commentInput__textarea","rows","placeholder","onChange","e","target","replace","toLowerCase","collection","doc","update","DarkModeBtn","darkmodeImg","IconButton","src","darkmodeOnIcon","darkmodeicon","Navbar","logMeOut","removeItem","process","navbarCss","height","appicon","photoURL","blankProfile","NotificationContext","notification","showNotification","notificationData","hideNotification","NotificationContextProvider","activeNotification","setActiveNotification","useEffect","status","timer","setTimeout","clearTimeout","context","rootColor","otherColors","CssTextField","withStyles","root","color","borderBottomColor","borderColor","TextField","AuthForm","notificationCtx","setEmail","setPassword","authformTextfieldCSS","authformSignInButtonCSS","authformSignUpButtonCSS","signUpHandler","event","preventDefault","title","gotUser","signInHandler","Divider","marginBottom","backgroundColor","inputProps","InputLabelProps","autoComplete","variant","label","type","InputProps","marginTop","float","Button","autoFocus","CreatePost","setCaption","image","setImage","progress","setProgress","createPost__loggedInCss","createPost__textarea","onAuthStateChanged","alt","htmlFor","cursor","fontSize","accept","files","selectedImageSrc","URL","createObjectURL","imagePreview","document","getElementById","display","imageName","length","result","characters","charactersLength","i","charAt","Math","floor","random","makeId","ref","put","on","snapshot","round","bytesTransferred","totalBytes","child","getDownloadURL","imageUrl","add","timestamp","Timestamp","now","photoUrl","profileUrl","Post","postCss","post__delete","displayDelete","currentUser","marginLeft","refFromURL","delete","map","Feed","posts","setPosts","feedCss","onSnapshot","docs","post","data","padding","RequireAuth","ChildComponent","homeCss","App","getItem","Notification","statusClasses","classes","success","pending","activeClasses","Layout","ReactDOM","render","exact","path","component","loginpageInnerCSS","loginpageTitleCSS","loginpageCardCSS","Card","Body","Text","module","exports"],"mappings":"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","file":"static/js/main.ce262826.chunk.js","sourcesContent":["import { createContext, useState } from \"react\";\n\nexport const UserContext = createContext();\nexport const UserContextProvider = (props) => {\n  //By using this context this user state value can be accessed from anywhere.\n  const [user, setUser] = useState(null);\n  return (\n    <UserContext.Provider value={{ user: [user, setUser] }}>\n      {props.children}\n    </UserContext.Provider>\n  );\n};\n//to use this user state value in other components,just wrap under <UserContext.Provider> this </UserContext.Provider>\n","import firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBps2dAYpBCMSfkSp9Pb9g0uB8B4uavrpo\",\n  authDomain: \"reactsocialapptutorial.firebaseapp.com\",\n  projectId: \"reactsocialapptutorial\",\n  storageBucket: \"reactsocialapptutorial.appspot.com\",\n  messagingSenderId: \"1071064469720\",\n  appId: \"1:1071064469720:web:d8358c841243c084c447ad\",\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst storage = firebase.storage();\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport { db, auth, provider, storage };\n","import { auth, provider } from \"../firebase\";\n\nexport const signInWithGoogle = async () => {\n  let user;\n  await auth\n    .signInWithPopup(provider)\n    .then((res) => {\n      user = res.user;\n    })\n    .catch((error) => {\n      console.log(error.message);\n    });\n\n  return user;\n};\n\nexport const logout = async () => {\n  let logout_success;\n  await auth\n    .signOut()\n    .then(() => {\n      logout_success = true;\n    })\n    .catch((error) => {\n      console.log(error.message);\n    });\n\n  return logout_success;\n};\n\n// My code\nexport const signUpWithEmail = async (email, password) => {\n  let user;\n  await auth\n    .createUserWithEmailAndPassword(email, password)\n    .then((userCredential) => {\n      // Signed in\n      user = userCredential.user;\n      // ...\n    })\n    .catch((error) => {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      // ..\n      return error;\n    });\n  return user;\n};\n\nexport const signInWithEmail = async (email, password) => {\n  let user;\n  await auth\n    .signInWithEmailAndPassword(email, password)\n    .then((userCredential) => {\n      // Signed in\n      user = userCredential.user;\n\n      // ...\n    })\n    .catch((error) => {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      return error;\n    });\n  return user;\n};\n","import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { UserContext } from \"../../contexts/user\";\nimport { signInWithGoogle } from \"../../services/auth\";\nimport \"./style.css\";\n\nexport default function SignInBtn() {\n  const [, setUser] = useContext(UserContext).user;\n  const history = useHistory();\n\n  const signInBtnClick = async () => {\n    let userBySignIn = await signInWithGoogle();\n    if (userBySignIn) {\n      localStorage.setItem(\"user\", userBySignIn);\n      setUser(userBySignIn);\n      history.push(\"/home\");\n    }\n  };\n  return <div onClick={signInBtnClick} className=\"signInBtn\"></div>;\n}\n","import React from \"react\";\n\nexport default function Comment({ username, caption }) {\n  return (\n    <div className=\"comment\">\n      <p>\n        <span style={{ fontWeight: \"600\", marginRight: \"4px\" }}>\n          {username}\n        </span>\n        {caption}\n      </p>\n    </div>\n  );\n}\n","import { createContext, useState } from \"react\";\n\nexport const DarkModeContext = createContext();\nexport const DarkModeContextProvider = (props) => {\n  //By using this context this user state value can be accessed from anywhere.\n  const [DarkMode, setDarkMode] = useState(false);\n  return (\n    <DarkModeContext.Provider value={{ DarkMode: [DarkMode, setDarkMode] }}>\n      {props.children}\n    </DarkModeContext.Provider>\n  );\n};\n//to use this user state value in other components,just wrap under <UserContext.Provider> this </UserContext.Provider>\n","import React, { useContext, useState } from \"react\";\nimport \"./style.css\";\nimport { UserContext } from \"../../contexts/user\";\nimport { db } from \"../../firebase\";\nimport { DarkModeContext } from \"../../contexts/darkmode\";\n\nexport default function CommentInput({ comments, id }) {\n  const [comment, setComment] = useState(\"\");\n\n  const [user, setUser] = useContext(UserContext).user;\n  const [commentArray, setCommentArray] = useState(comments ? comments : []);\n\n  const [DarkMode, setDarkMode] = useContext(DarkModeContext).DarkMode;\n  var commentInput__btnCss = \"commentInput__btn\";\n  var commentInput__textarea = \"commentInput__textarea\";\n  if (DarkMode) {\n    commentInput__textarea = \"commentInput__textarea dark\";\n    commentInput__btnCss = \"commentInput__btn dark\";\n  }\n\n  const addComment = () => {\n    if (comment !== \"\") {\n      //add comment to the post info\n      commentArray.push({\n        comment: comment,\n        username: user.email.replace(\"@gmail.com\", \"\").toLowerCase(),\n      });\n\n      db.collection(\"posts\")\n        .doc(id)\n        .update({\n          comments: commentArray,\n        })\n        .then(function () {\n          setComment(\"\");\n          console.log(\"comment added\");\n        })\n        .catch(function (error) {\n          console.log(`Error ${error}`);\n        });\n    }\n  };\n  return (\n    <div className=\"commentInput\">\n      <textarea\n        className={commentInput__textarea}\n        rows=\"1\"\n        placeholder=\"write a comment..\"\n        value={comment}\n        onChange={(e) => setComment(e.target.value)}\n      ></textarea>\n      <button onClick={addComment} className={commentInput__btnCss}>\n        Post\n      </button>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/sun.919fd8c1.svg\";","export default __webpack_public_path__ + \"static/media/moon.cf257b45.svg\";","import React, { useState, useContext } from \"react\";\nimport \"./style.css\";\nimport { IconButton } from \"@material-ui/core\";\nimport darkmodeicon from \"../../res/sun.svg\";\nimport darkmodeOnIcon from \"../../res/moon.svg\";\nimport { DarkModeContext } from \"../../contexts/darkmode\";\n\nexport default function DarkModeBtn() {\n  const [DarkMode, setDarkMode] = useContext(DarkModeContext).DarkMode;\n  var darkmodeImg = \"darkmodebtn-image\";\n  const darkmodeHandler = () => {\n    darkmodeImg = \"darkmodebtn-image dark\";\n\n    setDarkMode(!DarkMode);\n  };\n  return (\n    <div className=\"darkmode-btn\">\n      <IconButton onClick={darkmodeHandler} className=\"darkmodebtn-icon\">\n        <img\n          className={darkmodeImg}\n          src={DarkMode ? darkmodeOnIcon : darkmodeicon}\n        ></img>\n      </IconButton>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/appicon2.12aa051e.svg\";","export default __webpack_public_path__ + \"static/media/blank-profile.7a6a6c54.webp\";","import React, { useContext } from \"react\";\nimport { UserContext } from \"../../contexts/user\";\nimport \"./style.css\";\nimport { logout } from \"../../services/auth\";\nimport { useHistory } from \"react-router-dom\";\nimport DarkModeBtn from \"../../components/darkmode-btn\";\nimport { DarkModeContext } from \"../../contexts/darkmode\";\nimport appicon from \"../../res/appicon2.svg\";\nimport blankProfile from \"../../res/blank-profile.webp\";\n\nexport default function Navbar() {\n  const [user, setUser] = useContext(UserContext).user;\n  const [DarkMode, setDarkMode] = useContext(DarkModeContext).DarkMode;\n  const history = useHistory();\n\n  const logMeOut = async () => {\n    let logMeOut = await logout();\n    if (logMeOut) {\n      localStorage.removeItem(\"user\");\n      history.push(process.env.PUBLIC_URL + \"social-media-app/\");\n    }\n  };\n\n  var navbarCss = \"navbar\";\n  if (DarkMode) {\n    navbarCss = \"navbar dark\";\n  }\n\n  return (\n    <div className={navbarCss}>\n      <div className=\"heading\">\n        <img\n          style={{ height: \"40px\", marginRight: \"10px\" }}\n          src={appicon}\n        ></img>\n        Social App\n        <div className=\"navbar-darkmode\">\n          <DarkModeBtn />\n        </div>\n      </div>\n\n      {user && user.photoURL ? (\n        <div onClick={logMeOut} className=\"logged-in\">\n          <img className=\"navbar__img\" src={user.photoURL} />\n          Log out\n        </div>\n      ) : (\n        user && (\n          <div onClick={logMeOut} className=\"logged-in\">\n            <img className=\"navbar__img\" src={blankProfile} />\n            Log out\n          </div>\n        )\n      )}\n    </div>\n  );\n}\n","import { createContext, useState, useEffect } from \"react\";\n\nconst NotificationContext = createContext({\n  notification: null, // { title, message, status }\n  showNotification: function (notificationData) {},\n  hideNotification: function () {},\n});\n\n// NotificationContextProvider function : To wrap our components which can access our states\nexport function NotificationContextProvider(props) {\n  const [activeNotification, setActiveNotification] = useState();\n\n  // Using useEffect to track the changes in notification status\n  useEffect(() => {\n    if (\n      activeNotification &&\n      (activeNotification.status === \"success\" ||\n        activeNotification.status === \"error\")\n    ) {\n      const timer = setTimeout(() => {\n        setActiveNotification(null);\n      }, 3000);\n\n      //cleanup function of useEffect\n      return () => {\n        clearTimeout(timer);\n      };\n    }\n  }, [activeNotification]);\n\n  const showNotificationHandler = (notificationData) => {\n    // setActiveNotification({\n    //   title: notificationData.title,\n    //   message: notificationData.message,\n    //   status: notificationData.status,\n    // });\n\n    setActiveNotification(notificationData);\n  };\n\n  const hideNotificationHandler = () => {\n    setActiveNotification(null);\n  };\n\n  const context = {\n    notification: activeNotification,\n    showNotification: showNotificationHandler,\n    hideNotification: hideNotificationHandler,\n  };\n\n  return (\n    <NotificationContext.Provider value={context}>\n      {props.children}\n    </NotificationContext.Provider>\n  );\n}\n\nexport default NotificationContext;\n","import React, { useState, useContext } from \"react\";\nimport {\n  Divider,\n  Button,\n  TextField,\n  withStyles,\n  DialogActions,\n} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\n\nimport NotificationContext from \"../../contexts/notification-context\";\nimport { signInWithEmail, signUpWithEmail } from \"../../services/auth\";\nimport { UserContext } from \"../../contexts/user\";\nimport { DarkModeContext } from \"../../contexts/darkmode\";\nimport \"./style.css\";\n\nlet rootColor = \"#C3C4C4\";\nlet otherColors = \"rgb(68, 127, 255)\";\n\nlet CssTextField = withStyles({\n  root: {\n    \"& label.Mui-focused\": {\n      color: otherColors,\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: otherColors,\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: rootColor,\n      },\n      \"&:hover fieldset\": {\n        borderColor: otherColors,\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: otherColors,\n      },\n    },\n  },\n})(TextField);\n\nexport default function AuthForm() {\n  const [user, setUser] = useContext(UserContext).user;\n  const notificationCtx = useContext(NotificationContext);\n  const [DarkMode, setDarkMode] = useContext(DarkModeContext).DarkMode;\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n\n  let authformTextfieldCSS = \"authform-textfield\";\n  let authformSignInButtonCSS = \"authform-signin-button\";\n  let authformSignUpButtonCSS = \"authform-signup-button\";\n  if (DarkMode) {\n    authformTextfieldCSS = \"authform-textfield dark\";\n    authformSignInButtonCSS = \"authform-signin-button dark\";\n    authformSignUpButtonCSS = \"authform-signup-button dark\";\n    rootColor = \"white\";\n    otherColors = \"white\";\n  }\n\n  const signUpHandler = async (event) => {\n    event.preventDefault();\n\n    notificationCtx.showNotification({\n      title: \"Please wait!\",\n      message: \"Getting things ready...\",\n      status: \"pending\",\n    });\n    try {\n      const gotUser = await signUpWithEmail(email, password);\n\n      if (gotUser) {\n        setUser(gotUser);\n        localStorage.setItem(\"user\", gotUser);\n\n        notificationCtx.showNotification({\n          title: \"Success!\",\n          message: \"Logged in successfully\",\n          status: \"success\",\n        });\n\n        history.push(\"/home\");\n      } else {\n        notificationCtx.showNotification({\n          title: \"Error!\",\n          message: \"Please enter valid details\",\n          status: \"error\",\n        });\n      }\n    } catch (err) {\n      notificationCtx.showNotification({\n        title: \"Error!\",\n        message: \"Not able to Sign in!\",\n        status: \"error\",\n      });\n    }\n  };\n\n  const signInHandler = async (event) => {\n    event.preventDefault();\n\n    notificationCtx.showNotification({\n      title: \"Please wait!\",\n      message: \"Getting things ready...\",\n      status: \"pending\",\n    });\n\n    try {\n      const gotUser = await signInWithEmail(email, password);\n      if (gotUser) {\n        setUser(gotUser);\n        localStorage.setItem(\"user\", gotUser);\n\n        notificationCtx.showNotification({\n          title: \"Success!\",\n          message: \"Logged in successfully\",\n          status: \"success\",\n        });\n\n        history.push(\"/home\");\n      } else {\n        notificationCtx.showNotification({\n          title: \"Error!\",\n          message: \"Please enter valid details\",\n          status: \"error\",\n        });\n      }\n    } catch (err) {\n      notificationCtx.showNotification({\n        title: \"Error!\",\n        message: \"Not able to Sign in!\",\n        status: \"error\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Divider\n        style={{\n          marginBottom: \"45px\",\n          backgroundColor: DarkMode && \"white\",\n        }}\n      />\n      <div className=\"authform-textfields-wrapper\">\n        <div className=\"authform-textfields\">\n          <CssTextField\n            inputProps={{ className: authformTextfieldCSS }}\n            InputLabelProps={{ className: authformTextfieldCSS }}\n            autoComplete=\"off\"\n            variant=\"outlined\"\n            label=\"Email\"\n            type=\"text\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n\n          <CssTextField\n            InputProps={{ className: authformTextfieldCSS }}\n            InputLabelProps={{ className: authformTextfieldCSS }}\n            variant=\"outlined\"\n            label=\"Password\"\n            type=\"password\"\n            value={password}\n            style={{\n              marginTop: \"20px\",\n            }}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n      </div>\n      <Divider\n        style={{ marginTop: \"25px\", backgroundColor: DarkMode && \"white\" }}\n      />\n\n      <div style={{ float: \"right\", marginTop: \"10px\" }}>\n        <Button\n          className={authformSignInButtonCSS}\n          autoFocus\n          type=\"submit\"\n          onClick={signInHandler}\n        >\n          Login\n        </Button>\n        <Button\n          className={authformSignUpButtonCSS}\n          autoFocus\n          type=\"submit\"\n          onClick={signUpHandler}\n          color=\"primary\"\n        >\n          SignUp\n        </Button>\n      </div>\n    </div>\n  );\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { SignInBtn } from \"../../components\";\nimport { UserContext } from \"../../contexts/user\";\nimport \"./style.css\";\n\nimport AddAPhotoIcon from \"@material-ui/icons/AddAPhoto\";\nimport makeId from \"../../helper/functions\";\nimport { db, storage } from \"../../firebase\";\n\nimport firebase from \"firebase\";\nimport { DarkModeContext } from \"../../contexts/darkmode\";\n\nexport default function CreatePost() {\n  const [user, setUser] = useContext(UserContext).user;\n  const [caption, setCaption] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [DarkMode, setDarkMode] = useContext(DarkModeContext).DarkMode;\n  var createPost__loggedInCss = \"createPost__loggedIn\";\n  var createPost__textarea = \"createPost__textarea\";\n  if (DarkMode) {\n    createPost__textarea = \"createPost__textarea dark\";\n    createPost__loggedInCss = \"createPost__loggedIn dark\";\n  }\n\n  firebase.auth().onAuthStateChanged(function (user) {\n    setUser(user);\n  });\n\n  const handleChange = (e) => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n\n      var selectedImageSrc = URL.createObjectURL(e.target.files[0]);\n\n      var imagePreview = document.getElementById(\"image-preview\");\n\n      imagePreview.src = selectedImageSrc;\n      imagePreview.style.display = \"block\";\n    }\n  };\n\n  const handleUpload = () => {\n    if (image) {\n      var imageName = makeId(10);\n      const uploadTask = storage.ref(`images/${imageName}.jpg`).put(image);\n      uploadTask.on(\n        \"state_changed\",\n        (snapshot) => {\n          //progress function\n\n          const progress = Math.round(\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n          );\n          setProgress(progress);\n        },\n        (error) => {\n          console.log(error);\n        },\n        () => {\n          //get download url and upload the post info\n          storage\n            .ref(\"images\")\n            .child(`${imageName}.jpg`)\n            .getDownloadURL()\n            .then((imageUrl) => {\n              db.collection(\"posts\").add({\n                timestamp: firebase.firestore.Timestamp.now(),\n                caption: caption,\n                photoUrl: imageUrl,\n                username: user.email.replace(\"@gmail.com\", \"\"),\n                profileUrl: user.photoURL\n                  ? user.photoURL\n                  : \"https://firebasestorage.googleapis.com/v0/b/reactsocialapptutorial.appspot.com/o/images%2Fblank-profile.webp?alt=media&token=d749fb07-d371-4927-b3d7-ac16abd31c9e\",\n              });\n            });\n          setCaption(\"\");\n          setProgress(0);\n          setImage(null);\n          document.getElementById(\"image-preview\").style.display = \"none\";\n          console.log(\"image nulled\");\n        }\n      );\n    }\n  };\n\n  return (\n    <div className=\"createPost\">\n      {user ? (\n        <div className={createPost__loggedInCss}>\n          <p>Create Post</p>\n          <div className=\"createPost__loggedInCenter\">\n            <textarea\n              placeholder=\"enter caption here..\"\n              className={createPost__textarea}\n              rows=\"3\"\n              value={caption}\n              onChange={(e) => setCaption(e.target.value)}\n            ></textarea>\n            <div className=\"createPost__imagePreview\">\n              <img id=\"image-preview\" alt=\"\" />\n            </div>\n          </div>\n          <div className=\"creatPost__loggedInBottom\">\n            <div className=\"createPost__imageUpload\">\n              <label htmlFor=\"fileInput\">\n                <AddAPhotoIcon\n                  style={{ cursor: \"pointer\", fontSize: \"20px\" }}\n                />\n              </label>\n\n              <input\n                id=\"fileInput\"\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={handleChange}\n              ></input>\n            </div>\n            <button\n              className=\"createPost__uploadBtn\"\n              onClick={handleUpload}\n              style={{\n                color: DarkMode\n                  ? caption\n                    ? \"#FFFFFF\"\n                    : \"lightgrey\"\n                  : caption\n                  ? \"#000\"\n                  : \"lightgrey\",\n              }}\n            >\n              {`Upload ${progress != 0 ? progress : \"\"}`}\n            </button>\n          </div>\n        </div>\n      ) : (\n        <div></div>\n      )}\n    </div>\n  );\n}\n","export default function makeid(length) {\n  var result = \"\";\n  var characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n","import React, { useContext, useState } from \"react\";\nimport { Comment } from \"../../components\";\nimport { db, storage } from \"../../firebase\";\nimport \"./style.css\";\nimport { CommentInput } from \"../../components\";\nimport { UserContext } from \"../../contexts/user\";\nimport { DarkModeContext } from \"../../contexts/darkmode\";\n\nexport default function Post({\n  profileUrl,\n  username,\n  id,\n  photoUrl,\n  caption,\n  comments,\n}) {\n  const [user, setUser] = useContext(UserContext).user;\n\n  const [DarkMode, setDarkMode] = useContext(DarkModeContext).DarkMode;\n  var postCss = \"post\";\n  var post__delete = \"post__delete\";\n  if (DarkMode) {\n    postCss = \"post dark\";\n    post__delete = \"post__delete dark\";\n  }\n\n  var displayDelete = false;\n  var currentUser = null;\n  const postUserChecker = () => {\n    if (user) {\n      currentUser = user.email.replace(\"@gmail.com\", \"\");\n    }\n    if (currentUser === username && currentUser !== null) {\n      displayDelete = true;\n    }\n  };\n  postUserChecker();\n\n  const deletePost = () => {\n    //delete the image from firebase storage\n\n    //get reference to the image file we like to delete\n    var imageRef = storage.refFromURL(photoUrl);\n\n    //delete the file\n    imageRef\n      .delete()\n      .then(function () {\n        console.log(\"delete successfull\");\n      })\n      .catch(function (error) {\n        console.log(`Error delete${error}`);\n      });\n\n    //2 delete the post info from firbase firestore\n    db.collection(\"posts\")\n      .doc(id)\n      .delete()\n      .then(function () {\n        console.log(\"delete successfull from firebase\");\n      })\n      .catch(function (error) {\n        console.log(`Error post info delete from firebase ${error}`);\n      });\n  };\n\n  return (\n    <div className={postCss}>\n      <div className=\"post__header\">\n        <div className=\"post__headerLeft\">\n          <img className=\"post__profilePic\" src={profileUrl} />\n          <p style={{ marginLeft: \"8px\" }}>{username}</p>\n        </div>\n        {displayDelete && (\n          <button onClick={deletePost} className={post__delete}>\n            Delete\n          </button>\n        )}\n      </div>\n\n      <div className=\"post__center\">\n        <img className=\"post__photoUrl\" src={photoUrl}></img>\n      </div>\n\n      <div>\n        <p>\n          <span style={{ fontWeight: \"600\", marginRight: \"4px\" }}>\n            {username}\n          </span>\n          {caption}\n        </p>\n      </div>\n\n      {comments &&\n        comments.map((comment) => (\n          <div key={comment.username}>\n            <Comment username={comment.username} caption={comment.comment} />\n          </div>\n        ))}\n      {user && <CommentInput comments={comments} id={id} />}\n    </div>\n  );\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Post } from \"..\";\nimport { DarkModeContext } from \"../../contexts/darkmode\";\nimport { db } from \"../../firebase\";\nimport \"./style.css\";\n\nexport default function Feed() {\n  const [posts, setPosts] = useState([]);\n  const [DarkMode, setDarkMode] = useContext(DarkModeContext).DarkMode;\n  var feedCss = \"feed\";\n  if (DarkMode) {\n    feedCss = \"feed dark\";\n  }\n\n  useEffect(() => {\n    db.collection(\"posts\").onSnapshot((snapshot) => {\n      setPosts(snapshot.docs.map((doc) => ({ id: doc.id, post: doc.data() })));\n    });\n  }, []);\n\n  return (\n    <div className={feedCss}>\n      {posts.map(({ id, post }) => {\n        return (\n          <div style={{ padding: \"6px 0px\" }}>\n            <Post\n              key={id}\n              id={id}\n              profileUrl={post.profileUrl}\n              username={post.username}\n              photoUrl={post.photoUrl}\n              caption={post.caption}\n              comments={post.comments}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\n\nimport \"./style.css\";\nimport { CreatePost, Navbar } from \"../../containers\";\nimport Feed from \"../../containers/feed\";\nimport { DarkModeContext } from \"../../contexts/darkmode\";\nimport RequireAuth from \"../../RequireAuth\";\n\nfunction Home() {\n  const [DarkMode, setDarkMode] = useContext(DarkModeContext).DarkMode;\n  var homeCss = \"home\";\n\n  if (DarkMode) {\n    homeCss = \"home dark\";\n  }\n\n  return (\n    <div className={homeCss}>\n      <Navbar />\n      <CreatePost />\n      <Feed />\n    </div>\n  );\n}\n\nexport default RequireAuth(Home);\n","import React, { useContext } from \"react\";\n\nimport { UserContext } from \"./contexts/user\";\n\nexport default (ChildComponent) => {\n  const ComposedComponent = (props) => {\n    const [user, setUser] = useContext(UserContext).user;\n    if (user) {\n      return (\n        <div>\n          <ChildComponent {...props} />\n        </div>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  return ComposedComponent;\n};\n","import React, { useContext, useEffect } from \"react\";\nimport { Home } from \"./pages\";\n\nimport { UserContext } from \"./contexts/user\";\n\nconst App = () => {\n  const [user, setUser] = useContext(UserContext).user;\n\n  useEffect(() => {\n    if (localStorage.getItem(\"user\")) {\n      setUser(localStorage.getItem(\"user\"));\n    }\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <Home />\n    </div>\n  );\n};\n\nexport default App;\n","import { useContext } from \"react\";\n\nimport classes from \"./notification.module.css\";\nimport NotificationContext from \"../../contexts/notification-context\";\nfunction Notification(props) {\n  const notificationCtx = useContext(NotificationContext);\n\n  const { title, message, status } = props;\n\n  let statusClasses = \"\";\n\n  if (status === \"success\") {\n    statusClasses = classes.success;\n  }\n\n  if (status === \"error\") {\n    statusClasses = classes.error;\n  }\n\n  if (status === \"pending\") {\n    statusClasses = classes.pending;\n  }\n\n  const activeClasses = `${classes.notification} ${statusClasses}`;\n\n  return (\n    <div className={activeClasses} onClick={notificationCtx.hideNotification}>\n      <h2>{title}</h2>\n      <p>{message}</p>\n    </div>\n  );\n}\n\nexport default Notification;\n","import React, { useContext } from \"react\";\n\nimport NotificationContext from \"../../contexts/notification-context\";\nimport Notification from \"../notification/notification\";\n\nexport default function Layout(props) {\n  const notificationCtx = useContext(NotificationContext);\n\n  const activeNotification = notificationCtx.notification;\n  return (\n    <div>\n      {props.children}\n      {activeNotification && (\n        <Notification\n          title={activeNotification.title}\n          message={activeNotification.message}\n          status={activeNotification.status}\n        />\n      )}\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { LoginPage } from \"./pages/LoginPage\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport App from \"./App\";\nimport { UserContextProvider } from \"./contexts/user\";\nimport { DarkModeContextProvider } from \"./contexts/darkmode\";\nimport { NotificationContextProvider } from \"./contexts/notification-context\";\nimport Layout from \"./components/layout/Layout\";\n\nReactDOM.render(\n  <NotificationContextProvider>\n    <DarkModeContextProvider>\n      <UserContextProvider>\n        <BrowserRouter>\n          <Layout>\n            <Switch>\n              <Route\n                exact\n                path={process.env.PUBLIC_URL + \"/\"}\n                component={LoginPage}\n              ></Route>\n              <Route exact path=\"/home\" component={App}></Route>\n            </Switch>\n          </Layout>\n        </BrowserRouter>\n      </UserContextProvider>\n    </DarkModeContextProvider>\n  </NotificationContextProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","import React, { useContext } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { SignInBtn } from \"../../components\";\nimport { UserContext } from \"../../contexts/user\";\nimport \"./style.css\";\nimport Navbar from \"../../containers/navbar\";\nimport AuthForm from \"../../components/authForm\";\nimport { DarkModeContext } from \"../../contexts/darkmode\";\n\nexport function LoginPage() {\n  const [user, setUser] = useContext(UserContext).user;\n  const history = useHistory();\n\n  const [DarkMode, setDarkMode] = useContext(DarkModeContext).DarkMode;\n  let loginpageInnerCSS = \"loginpage-inner\";\n  let loginpageTitleCSS = \"loginpage-title\";\n  let loginpageCardCSS = \"loginpage-card\";\n\n  if (DarkMode) {\n    loginpageInnerCSS = \"loginpage-inner dark\";\n    loginpageTitleCSS = \"loginpage-title dark\";\n    loginpageCardCSS = \"loginpage-card dark\";\n  }\n\n  return (\n    <div className=\"loginpage\">\n      <Navbar />\n      <div className={loginpageInnerCSS}>\n        <div className={loginpageTitleCSS}>\n          Share your stories here! <br />\n          Sign up Now!\n        </div>\n        <Card className={loginpageCardCSS}>\n          <Card.Body className=\"loginpage-card-body\">\n            <AuthForm />\n            <Card.Text className=\"loginpage-card-text\">\n              Sign in with Google:\n            </Card.Text>\n            <div className=\"loginpage-signinbtn\">\n              <SignInBtn />\n            </div>\n          </Card.Body>\n        </Card>\n      </div>\n\n      <div className=\"loginpage-footer\">Developed by Sagar Dalal</div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"notification_notification__2lEK8\",\"pending\":\"notification_pending__13nR4\",\"success\":\"notification_success__2LYeu\",\"error\":\"notification_error__1Dac6\"};"],"sourceRoot":""}